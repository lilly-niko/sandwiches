<table id="certifLabTable" class="table table-striped table-hover" style="width: 100% !important;">
    <thead>
        <tr>
            <th rowspan="2" class="dt-center">№</th>
            <th rowspan="2" class="date" >Дата</th>
            <th rowspan="2">Вид продукт</th>
            
            <th rowspan="2">Опаковка</th>
            <th colspan="2" class="dt-center" data-dt-order="disable">Партида</th>
            <th colspan="2" class="dt-center" data-dt-order="disable">Търговски документ</th>
            <th colspan="2" class="dt-center" data-dt-order="disable">Клиент</th>
        </tr>
        <tr>
            
            <th>Брой</th>
            <th>Идент.№</th>
            <th>№</th>
            <th class="date">Дата</th>
            <th>Има на фирмата</th>
            <th>№</th>
        </tr>
    </thead>
    <tbody>
        {{#each data}}
        <tr id="{{this.id_e}}">
            <td class="td-data dt-center"></td>
            <td class="td-data">{{dateNew this.date}}</td>
            <td class="td-data">{{this.name}}</td>
            <td class="td-data">{{this.packaging}}</td>
            <td class="td-data">{{this.quantity}}</td>
            <td class="td-data">{{this.batch_num}}</td>
            <td class="td-data">{{this.fak_num}}</td>
            <td class="td-data">{{dateNew this.fak_date}}</td>
            <td class="td-data">{{this.name_firm}}</td>
            <td class="td-data">{{this.client_id}}</td>
        </tr>
        {{/each}}
    </tbody>
</table>
<script>

 var collapsedGroups = {};
    $(document).ready(function () {

        var table_c = $('#certifLabTable').DataTable({
            'columnDefs': [{
                    'targets': 0,
                    'width': '5%',
                    "searchable": false,
            "orderable": false,
                },
                { type: 'date', "targets": 1 }
                ],
                order: [],
            "pageLength": 50,
            "scrollX": true,
            'language': {
                "lengthMenu": "Покажи _MENU_ записа на страница",
                "emptyTable": "Няма налични записи",
                "zeroRecords": "Няма налични записи за избрания критерий ",
                "info": "Показана страница _PAGE_ от _PAGES_",
                "infoEmpty": "Показани 0 до 0 от 0 записа",
                "infoFiltered": "(филтрирани от общо _MAX_  записа)",
                "search": "Търсене:",
                //customize pagination prev and next buttons: use arrows instead of words
                'paginate': {
                    'previous': '<i class="ri-arrow-left-s-line"></i>',
                    'next': '<i class="ri-arrow-right-s-line"></i>'
                },
                'select': {
                    'rows': {
                        _: 'Избрани %d реда',
                        1: 'Избран 1 ред'
                    }
                }
            },
            
             'rowGroup' : {
        // Uses the 'row group' plugin
        'dataSrc': 1,
        'startRender': function (rows, group) {
            var collapsed = !!collapsedGroups[group];
            let sum=0;

            rows.nodes().each(function (r) {
          r.style.display = 'none';
          if (collapsed) {
            r.style.display = '';
          }});
   

            // Add category name to the <tr>. NOTE: Hardcoded colspan
            return $('<tr/>')
                .append('<td colspan="10">' + group + ' (' + rows.count() + ')</td>')
                .attr('data-name', group)
                .toggleClass('collapsed', collapsed);
        }
                },
            'layout': {
                'topStart': {
                    'buttons': [
                        {
                            text: 'Добави запис',
                            action: function (e, dt, node, config) {
                                console.log(e);
                                console.log(dt);
                                console.log(node);
                                $('#addTaskModal').modal("show");
                                //alert('Button activated');
                            }
                        },
                        {
                             text: 'Редактирай',
      extend: 'selected',
      action: function(e, dt, node, config) {
            var id= dt.rows( { selected: true } ).data()[0].DT_RowId;
             var date= dt.rows({ selected: true }).data()[0][1];
               var quant= dt.rows({ selected: true }).data()[0][4];
                 var type= dt.rows({ selected: true }).data()[0][2];
                  var client= dt.rows({ selected: true }).data()[0][8];
               var fak_num= dt.rows({ selected: true }).data()[0][6];
                var fak_date= dt.rows({ selected: true }).data()[0][7];
                 document.getElementById("id_edit").value=id;
                 
                  document.getElementById('date_edit').value = new Date(date.split("/").reverse().join('-')).toISOString().substring(0, 10);
                 document.getElementById("quant_edit").value=quant;
                  document.getElementById("fak_num_edit").value=fak_num;
                  if (fak_date){
                  document.getElementById('fak_date_edit').value = new Date(fak_date.split("/").reverse().join('-')).toISOString().substring(0, 10);
                  }
                 var dd = document.getElementById('product_id_edit');
                 for (var i = 0; i < dd.options.length; i++) {
    if (dd.options[i].text === type) {
        dd.selectedIndex = i;
        break;
    }
}var cli = document.getElementById('client_id_edit');
                 for (var i = 0; i < cli.options.length; i++) {
    if (cli.options[i].text === client) {
        cli.selectedIndex = i;
        break;
    }
}
         $('#editTaskModal').modal("show");
      }
                },
                {
                            text: 'Изтрий',
                            extend: 'selected',
                            action: function (e, dt, node, config) {
                                var quant = dt.rows({ selected: true }).data()[0][5];
                                 var id= dt.rows( { selected: true } ).data()[0].DT_RowId;
                                if (!confirm('Сигурни ли сте че искате да изтриете избрания запис?')) {
                                    e.preventDefault();
                                }else{
                                fetch("/deleteExport", {
                                    method: "POST",
                                    redirect: "manual",
                                    body: JSON.stringify({ id: id,quantity: quant, product_id: 3 }),
                                    headers: {
                                        "Content-Type": "application/json",
                                    }
                                }).then(async response => {

                                    console.log(response);
                                    if (response.type == "opaqueredirect") {
                                        // To make sure the fetch is with redirect response return.  
                                        window.location.replace('/expedition'); // create one and only one request
                                        return;
                                    }
                                }).catch((err) => {
                                    console.log(err);
                                    cannotUploadMessage.style.cssText = "display: flex; animation: fadeIn linear 1.5s;";
                                });


}

                            }

                        },
                        {
      text: 'Принтирай',
      extend: 'selected',
      action: function(e, dt, node, config) {
          var id= dt.rows( { selected: true } ).data()[0].DT_RowId;
          var firm= dt.rows( { selected: true } ).data()[0][8];
         var date_tmp= dt.rows({ selected: true }).data()[0][1];
        var date = new Date(date_tmp.split("/").reverse().join('-')).toISOString().substring(0, 10);
        console.log(firm);
  $.get("/printExpedition/"+id+"/"+firm+"/"+date, function(data, status){
   // alert("Data: " + data + "\nStatus: " + status);
   console.log(dt.rows( { selected: true } ).data()[0]);
    var newWindow = window.open();
 newWindow.document.write('<html><head><title>Print it!</title><link rel="stylesheet" type="text/css" href="/style.css"> <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/3.5.0/remixicon.css">	<link rel="stylesheet" href="/pdf.css" media="all" /></head><body> ');
    newWindow.document.write(data);
     newWindow.document.write('</body></html>');
    newWindow.onload = function(e){ 
    newWindow.print();
}
  });

         //$('#printTaskModal').modal("show");
    }}
                    ]
                }
            },
            'select': true
        })

        $('#certifLabTable').on('select.dt deselect.dt', function () {
            table_c.buttons(['.edit']).enable(
                table_c.rows({ selected: true }).indexes().length === 0 ? false : true
            )
        })
        $('#certifLabTable tbody').on('click', 'tr.dtrg-start', function () {
        var name = $(this).data('name');
        console.log(name);
        collapsedGroups[name] = !collapsedGroups[name];
        table_c.draw(false);
    });  
     table_c.on( 'draw.dt', function () {
    var PageInfo = $('#certifLabTable').DataTable().page.info();
         table_c.column(0, { page: 'current' }).nodes().each( function (cell, i) {
            cell.innerHTML = i + 1 + PageInfo.start;
        } );
    } );
    table_c.columns.adjust().draw();
    })
</script>