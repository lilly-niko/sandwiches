<table id="certifTable" class="table table-striped table-hover" style="width: 100% !important;">
    <thead>
        <tr>
            <th>Име</th>
            <th class="name truncate">Булстат</th>
            <th class="name truncate">Адрес</th>
            <th class="name truncate">Имейл</th>
            <th class="name truncate">Телефон</th>
            <th></th>
            <th></th>
        </tr>

    </thead>
    <tbody>
       {{#each data}}
        <tr id="{{this.id}}">
            <td class="td-data">{{this.name}} </td>
            <td class="td-data">{{this.bulstat}}</td>
            <td class="td-data">{{this.address}}</td>
             <td class="td-data">{{this.email}}</td>
              <td class="td-data">{{this.phone}}</td>
              <td></td>
                                    <td colspan="6">
										    <div class="cards" style="
    display: grid;
    width: 100%;
    grid-gap: 5%;
    grid-template-columns: 1fr 1fr;
    overflow-y: scroll;">
											<div class="user_card" style=" grid-column: span 2;">
										    <div class="h5">
										        Обекти
										    </div>
							<div id= "insertData_{{this.id}}"></div>
											</div>
											
										</div>
										
									</td>
        </tr>
        {{/each}}
    </tbody>
</table>


    <script>
        $(document).ready(function () {
            		function format(d) {

			return '<table cellpadding="7" cellspacing="0" border="0"  style="width:100%">' +
				'<tr>' +
				'<td>' + d[6] + '</td>' +
				'</tr>' +
				'</table>';
		}
   
            var table = $('#certifTable').on( 'draw.dt', function () {
      let n = 0;
    $(".number").each(function () {
            $(this).html(++n);
        })
        }).DataTable({
                'columnDefs': [
                    { className: 'dt-left', targets: '_all' },{ type: 'string', targets: [1,2,3,4,0], 'orderable': true },	{ "visible": false, "targets": 6 },{
					"className": 'dt-control',
					"orderable": false,
					"data": null,
					"defaultContent": '',
					"width": '30px',
					"targets": 5
				}],
                'order': [
        [1, 'asc']],
                "pageLength": 50,
                'language': {
                    "lengthMenu": "Покажи _MENU_ записа на страница",
                    "emptyTable":     "Няма налични записи",
            "zeroRecords": "Няма налични записи за избрания критерий ",
            "info": "Показана страница _PAGE_ от _PAGES_",
            "infoEmpty": "Показани 0 до 0 от 0 записа",
            "infoFiltered": "(филтрирани от общо _MAX_  записа)",
            "search":         "Търсене:",
                    //customize pagination prev and next buttons: use arrows instead of words
                    'paginate': {
                        'previous': '<i class="ri-arrow-left-s-line"></i>',
                        'next': '<i class="ri-arrow-right-s-line"></i>'
                    },
                    'select': {
            'rows': {
                _: 'Избрани %d реда',
                1: 'Избран 1 ред'
            }
        }
                },
                 'layout': {
        'topStart': {
            'buttons': [
                {
                    text: 'Добави запис',
                    action: function (e, dt, node, config) {
                        console.log(e);
                        console.log(dt);
                        console.log(node);
                        $('#addTaskModal').modal("show");
                        //alert('Button activated');
                    }
                },
                {
      text: 'Редактирай',
      extend: 'selected',
      action: function(e, dt, node, config) {
           var id= dt.rows( { selected: true } ).data()[0].DT_RowId;
                var eik= dt.rows({ selected: true }).data()[0][1];
               var name= dt.rows({ selected: true }).data()[0][2];
               var address= dt.rows({ selected: true }).data()[0][3];
                var email= dt.rows({ selected: true }).data()[0][4];
                var phone= dt.rows({ selected: true }).data()[0][5];
                var mol= dt.rows({ selected: true }).data()[0][6];
               
                 document.getElementById("id_edit").value=id;
                 document.getElementById("name_edit").value=name;
                 document.getElementById("bulstat_edit").value=eik;
                 document.getElementById("address_edit").value=address;
                 document.getElementById("email_edit").value=email;
                 document.getElementById("phone_edit").value=phone;
                 document.getElementById("mol_edit").value=mol;
                
    if(!eik){
        document.getElementById("bulstat_edit").readOnly = true;
        document.getElementById("bulstat_edit").removeAttribute("required");
        document.getElementById("mol_edit").readOnly = true;
        document.getElementById("mol_edit").removeAttribute("required");
    }
         $('#editContragentsModal').modal("show");
      }
                }
               /* {
      text: 'Изтрий',
      extend: 'selected',
      action: function(e, dt, node, config) {
          var id= dt.rows({ selected: true }).data()[0][0];
          if (!confirm('Сигурни ли сте че искате да изтриете избрания запис?')) {
            e.preventDefault();
        }
        $.post(`/deleteContragents/${id}`, (data, status) => {
  this.html(data);
});
    }
            
        }*/
        ]
        }
    },
    'select': true
            });

        	table.on('click', 'td.dt-control', function (e) {
			let tr = e.target.closest('tr');
			let row = table.row(tr);
			console.log(tr.id);
			if (row.child.isShown()) {
				// This row is already open - close it
				row.child.hide();
			}
			else {
				// Open this row
				var id= tr.id;
				row.child(format(row.data())).show();
				let table = '<br><table class="table table-bordered">';
				table += '<tr><td>Обект</td><td>Адрес</td></tr>';

				var contr_info = document.getElementById("insertData_"+id);
			/*	console.log(contr_info);
				
				wedges.forEach((element) => {
					if (element.recipe_id == id) {

						table += `<tr><td>${element.name}</td>`;

						table += `<td>${element.quantity}</td></tr>`;
					}
				});*/
				table += '</table>';
				console.log(table);

				contr_info.insertAdjacentHTML("beforebegin", table);
				


			}
	});
           

        });
        
            
    </script>
   