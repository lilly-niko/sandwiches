<!DOCTYPE html>
<!-- Created by CodingLab |www.youtube.com/CodingLabYT-->
<html lang="bg" dir="ltr">

<head>
    <meta charset="UTF-8">
    <title>Задължения</title>
    <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">


    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">


    <link rel="stylesheet" href="/style.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ"
        crossorigin="anonymous"></script>

    <script src='https://cdn.datatables.net/2.0.7/js/dataTables.js'></script>
    <script src='https://cdn.datatables.net/buttons/3.0.2/js/dataTables.buttons.js'></script>
    <script src='https://cdn.datatables.net/buttons/3.0.2/js/buttons.dataTables.js'></script>
    <script src='https://cdn.datatables.net/select/2.0.2/js/dataTables.select.js'></script>
    <script src='https://cdn.datatables.net/select/2.0.2/js/select.dataTables.js'></script>

    <link rel='stylesheet' href='https://cdn.datatables.net/2.0.8/css/dataTables.dataTables.css'>
    <link rel='stylesheet' href='https://cdn.datatables.net/buttons/3.0.2/css/buttons.dataTables.css'>
    <link rel='stylesheet' href='https://cdn.datatables.net/select/2.0.3/css/select.dataTables.css'>


    <script src="https://cdn.datatables.net/rowgroup/1.5.0/js/dataTables.rowGroup.js"></script>
    <script src="https://cdn.datatables.net/rowgroup/1.5.0/js/rowGroup.dataTables.js"></script>
    <script src="https://cdn.datatables.net/plug-ins/1.10.19/api/sum().js"></script>


    <script type="text/javascript" src="/test.js"></script>

    <style>
        tr.dtrg-group,
        tr.dtrg-group:hover {
            background-color: rgba(0, 0, 0, 0) !important;
        }

        #history tr:not(.dtrg-group) {
            background-color: rgba(0, 0, 0, 0.20) !important;
        }

        .btn {
            padding: 0px 4px !important;
        }


        .d-inline-block {
            /* OPTIONAL pointer-events setting above blocks cursor setting, so set it here */
            cursor: not-allowed;
        }

        .btn.btn-success[disabled] {
            color: #000;
        }

        .badge {
            white-space: break-spaces !important;
            max-width: 100px;
        }
    </style>
</head>

<body>
    {{>nav_bar}}
    <div class="content">
        <div class="card" style="  padding: 25px;">
            <div class="content-panel">
                <div class="content-header-wrapper">

                    <h2 class="title">Задължения</h2>

                    {{>info}}

                </div>


                {{>debt_table}}

            </div>
        </div>
    </div>

    <script>
        var collapsedGroups = {};
        $(document).ready(function () {
            var table = $('#history').DataTable({
                'columnDefs': [{
                    'targets': [0, 5],
                    'searchable': false,
                    'orderable': false,
                    'className': 'dt-body-center',
                    'width': "20px"
                },
                {
                    'targets': [4],
                    'className': 'dt-body-center'
                },
                 {
                    'targets': [1, 2, 3],
                    'className': 'dt-center'
                }
                ],
                'order': [],
                'paging': false,
                'language': {
                    "lengthMenu": "Покажи _MENU_ записа на страница",
                    "emptyTable": "Няма налични записи",
                    "zeroRecords": "Няма налични записи за избрания критерий ",
                    "info": "Показана страница _PAGE_ от _PAGES_",
                    "infoEmpty": "Показани 0 до 0 от 0 записа",
                    "infoFiltered": "(филтрирани от общо _MAX_  записа)",
                    "search": "Търсене:",
                    //customize pagination prev and next buttons: use arrows instead of words

                    'paginate': {
                        'previous': '<i class="ri-arrow-left-s-line"></i>',
                        'next': '<i class="ri-arrow-right-s-line"></i>'
                    },
                    'select': {
                        'rows': {
                            _: 'Избрани %d реда',
                            1: 'Избран 1 ред'
                        }
                    }
                },
                "pageLength": 100,
                'rowGroup': {
                    // Uses the 'row group' plugin
                    'dataSrc': 1,
                    'startRender': function (rows, group) {
                        var collapsed = !!collapsedGroups[group];
                        // Assign class name to all child rows
                        var groupName = 'group-' + group.replace(/[^A-Za-z0-9]/g, '');
                        var rowNodes = rows.nodes();
                        rowNodes.to$().addClass(groupName);

                        // Get selected checkboxes
                        var checkboxesSelected = $('input[type="checkbox"]:checked', rowNodes);

                        // Parent checkbox is selected when all child checkboxes are selected
                        var isSelected = (checkboxesSelected.length == rowNodes.length);

                        rows.nodes().each(function (r) {
                            r.style.display = 'none';
                            if (collapsed) {
                                r.style.display = '';
                            }
                        });
                        var debtSum = rows
                            .data()
                            .pluck(3)
                            .sum().toFixed(2);


                        return $('<tr/>')
                            .append('<td><input type="checkbox" class="group-checkbox" data-group-name="'
                                + groupName + '"' + (isSelected ? ' checked' : '') + '></td>')
                            .append('<td class="dt-left">' + group + ' (' + rows.count() + ' задължения)</td>')
                            .append('<td></td>')
                            .append('<td class="dt-right">' + debtSum + '</td>')
                            .append('<td></td><td></td>')
                            .attr('data-name', group)
                            .toggleClass('collapsed', collapsed);
                    }
                }
            });

            $('#history').on('select.dt deselect.dt', function () {
                table.buttons(['.edit']).enable(
                    table.rows({ selected: true }).indexes().length === 0 ? false : true
                )
            })
            $('#history tbody').on('click', 'tr.dtrg-start', function (e) {
                if ($(e.target).is("input")) {
                    return
                } else {
                    var name = $(this).data('name');
                    collapsedGroups[name] = !collapsedGroups[name];
                    table.draw(false);
                }
            });
            $('#history').on('click', '.group-checkbox', function (e) {
                // Get group class name
                var groupName = $(this).data('group-name');
                // Select all child rows
                var rows = table.cells('tr.' + groupName, 0).nodes();
                $('input[type="checkbox"]', rows).prop('checked', this.checked)
                $('input[type="checkbox"]', rows).trigger("change");

            });
            $('#history-select-all').on('click', function () {
                var rows = table.rows({ 'search': 'applied' }).nodes();
                $('input[type="checkbox"]', rows).prop('checked', this.checked);
                $('input[type="checkbox"]', rows).trigger("change");
                $('.group-checkbox').prop('checked', this.checked);
            });
            $('#history tbody').on('change', 'input[type="checkbox"]', function () {
                // If checkbox is not checked
                if (!this.checked) {
                    var el = $('#history-select-all').get(0);
                    var parent = $('.group-checkbox').get(0);
                    console.log($(this).parents('tr').closest('.dtrg-group').get(0));

                    // If "Select all" control is checked and has 'indeterminate' property
                    if (el && el.checked && ('indeterminate' in el)) {
                        el.indeterminate = true;
                    }
                }
            });

            table.$('input[type="checkbox"]').on('change', function (e) {
                var debtSum = 0;
                var checkboxNodes = table.column(0).nodes();
                var sumData = table.column(3).data();

                for (var i = 0; i < checkboxNodes.length; i++) {
                    if ($(checkboxNodes[i]).find("input").is(':checked')) {
                        debtSum += parseInt(sumData[i]);
                    }
                }
                document.getElementById('debtSumAll').innerText = debtSum;

            });

        });
        async function showInvoice() {
            var rowdata = event.target.parentNode.closest('tr').id;
            var rowId = rowdata.split('-')[1];
            fetch('/view_faktura', {
                method: 'post',
                body: JSON.stringify({
                    id: rowId
                }),
                headers: {
                    "Content-type": "application/json; charset=UTF-8"
                }
            }).then((response) => response.json())
                .then((data) => {
                    console.log(data);
                    window.open(data.url, '_blank').focus();
                    if (data.is_changed) {
                        let tr = document.getElementById(rowdata);
                        let innerDAta = tr.cells.item(5);
                        var li1 = innerDAta.getElementsByTagName('li')[1];
                        var li2 = innerDAta.getElementsByTagName('li')[2];
                        li1.innerHTML = ` <button class="btn btn-success" type="submit" id="autosend_button" onclick="markForSend()"
                                data-bs-toggle="tooltip" data-bs-placement="bottom"
                                data-bs-title="Маркиране за автоматино плащане"><i class='bx bx-mail-send'></i></button>`;
                        li2.innerHTML = `<button class="btn btn-info" type="submit" id="send_button" data-bs-toggle="tooltip"
                                data-bs-placement="bottom" data-bs-title="Изпращане" onclick="sendEmail()"
                                data-bs-toggle="modal"><i
                                    class='bx bx-send'></i></button>`;
                        //var tooltip = new bootstrap.Tooltip(li1.getElementsByTagName('button')[0]);
                        var tooltipLst = [li1.getElementsByTagName('button')[0], li2.getElementsByTagName('button')[0]].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
                    }
                }
                )
            //location.href = "http://localhost:3007/view_faktura/" + rowId;
        };
        async function markForSend() {
            var tooltip1 = bootstrap.Tooltip.getInstance(event.currentTarget);
            await tooltip1.hide();
            var rowdata = event.currentTarget.closest('tr').id;
            var rowId = rowdata.split('-')[1];
            console.log(rowId);
            fetch('/mark_faktura', {
                method: 'post',
                body: JSON.stringify({
                    id: rowId
                }),
                headers: {
                    "Content-type": "application/json; charset=UTF-8"
                }
            }).then(async response => {
                if (response.ok) {
                    let tr = document.getElementById(rowdata);
                    let innerDAta = tr.cells.item(5);
                    var li1 = innerDAta.getElementsByTagName('li')[1];
                    li1.innerHTML = `<span class="d-inline-block" tabindex="0" data-bs-toggle="tooltip"  data-bs-placement="top"
                            title="Вече е маркирана за изпращане">
                            <button class="btn btn-success" type="submit" id="autosend_button" onclick="markForSend()"
                                 data-bs-toggle="tooltip" data-bs-placement="bottom"
                                data-bs-title="Маркиране за автоматино плащане" disabled
                                ><i class='bx bx-mail-send'></i></button>
                        </span>`;
                    var tooltip = new bootstrap.Tooltip(li1.getElementsByTagName('button')[0]);
                    //var tooltipLst = [li1.getElementsByTagName('button')[0],li2.getElementsByTagName('button')[0]].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));

                }
            }
            )
            //location.href = "http://localhost:3007/view_faktura/" + rowId;
        };
        async function sendEmail() {
            if (!confirm('Сигурни ли сте че искате да изпратите избраната фактура?')) {
                e.preventDefault();
            }
            var rowdata = event.target.parentNode.closest('tr').id;
            var rowId = rowdata.split('-')[1];
            var date = rowdata.split('-')[2];
            var email = rowdata.split('-')[3];
            let tr = document.getElementById(rowdata);
            fetch('/sendMail', {
                method: 'post',
                body: JSON.stringify({
                    debt_id: rowId,
                    date_issued: date,
                    sum_to_pay: tr.cells.item(3).innerText,
                    mail: email
                }),
                headers: {
                    "Content-type": "application/json; charset=UTF-8"
                }
            }).then((response) => console.log(response))
            //location.href = "http://localhost:3007/view_faktura/" + rowId;
        };

    </script>
    <script>
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
    </script>
</body>

</html>